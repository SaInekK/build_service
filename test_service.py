from fastapi.testclient import TestClientfrom main import appdef test_valid_request_1():    request_data = {"build": "A"}    with TestClient(app) as client:        response = client.post(            "/get_tasks",            json=request_data        )    assert response.status_code == 200    print('response.json()', response.json())    assert response.json() in [        ['B', 'D', 'C'],        ['D', 'B', 'C']    ], f'Неверно найдены задачи для билда {request_data["build"]}'def test_valid_request_2():    request_data = {"build": "H"}    with TestClient(app) as client:        response = client.post(            "/get_tasks",            json=request_data        )    assert response.status_code == 200    print('response.json()', response.json())    assert response.json() == [        'M', 'L', 'K', 'J'    ], f'Неверно найдены задачи для билда {request_data["build"]}'def test_request_nonexistent_build():    request_data = {'build': 'back_arm'}    with TestClient(app) as client:        response = client.post(            '/get_tasks',            json=request_data        )    assert response.status_code == 404    assert response.json() == {        'detail': 'Build dependencies not found'    }, 'Неверный ответ при отсутствии билда в файлах настроек'